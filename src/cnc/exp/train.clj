(ns cnc.exp.train
  (:require [cnc.execute :refer [run-experiment! slurp-bytes write-json git-commit gather-results! create-exp-dir]]
            [cnc.eval-map :refer [find-fn]]
            [replikativ.crdt.repo.stage :as s]
            [replikativ.crdt.repo.realize :as real]
            [full.async :refer [<??]]
            [boltzmann.theoretical :as theo]
            [boltzmann.matrix :refer [full-matrix]]
            [incanter.stats :refer [sample-normal]]
            [konserve.protocols :refer [-exists? -get-in -bget -update-in -assoc-in]]
            [hasch.core :refer [uuid]]
            [clojure.core.async :refer [>!!]]
            [clojure.java.io :as io]
            [clj-hdf5.core :as hdf5]
            [cheshire.core :as json]
            [taoensso.timbre :as timber]))

(timber/refer-timbre)

(defn setup-training! [store base-dir {:keys [training-params
                                              data-id calibration-id
                                              weights biases] :as exp-params}]
  (write-json base-dir "training_params.json" training-params)
  (write-json base-dir "init_weights.json" weights)
  (write-json base-dir "init_biases.json" biases)
  (write-json base-dir "calibration.json" (<?? (-get-in store [calibration-id :output])))
  (write-json base-dir "data.json" (<?? (-bget store data-id #(-> % :input-stream slurp read-string)))))

(defn theo-lr->bio [lr phase-duration]
  (float (* (/ 1.5e-2 phase-duration) lr)))

(comment
  (do
    (require '[cnc.core :refer [state]]
             '[konserve.protocols :refer [-get-in -bget -exists?]])
    (def stage (get-in @state [:repo :stage]))
    (def store (get-in @state [:repo :store]))
    (def repo-id (get-in @state [:repo :id])))

  (full-matrix (vec (take 20 #(repeatedly (vec (sample-normal 9 :mean 0 :sd 0.01))))))

  (<?? (-get-in store [#uuid "3dff229e-363d-5c21-947d-e363fddfa399"]))

  (def test-env
    (let [source-path (str (get-in @state [:config :source-base-path])
                           "model-nmsampling/code/ev_cd/train.py")]
      (run-experiment! (partial setup-training! store)
                       {:source-path source-path
                        :args ["srun-log" "python" source-path]
                        :training-params {:h_count 20,
                                          :epochs 1000 ;; TODO
                                          :dt 0.1,
                                          :burn_in_time 0.,
                                          :phase_duration 1000.0,
                                          :learning_rate (theo-lr->bio 0.005 400.0),
                                        ;:bias_learning_rate 0.0,
                                          :weight_recording_interval 100.0,
                                          :stdp_burnin 5.0,
                                          :sim_setup_kwargs {:grng_seed 42
                                                             :rng_seeds_seed 42}}

                        #_(full-matrix (vec (take 20 (repeatedly #(vec (sample-normal 25 :mean 0 :sd 0.01))))))
                        :weights [[0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00342468193831142 0.008642779261380032 -0.0045058079725071466 0.012930060528096214 -3.0581280758134894E-4 0.01650896287728391 -0.015448548021856051 -0.01123375801703412 0.009549078139750969 0.010632284153988565 6.244171931503096E-4 0.010445145836048686 -0.010461056215432429 -0.005929669884434157 -0.018059567721070632 0.0031764815313101756 0.005860784174742606 -0.008294739985706992 -0.0011962635090468014 7.786838119541754E-4] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.0050389191426211885 -0.0036529192208251122 0.010509967458706153 -0.0013227420758629086 0.004840647273825023 0.010385605925631295 0.009183913696056534 -0.007563682216176544 0.00404701531874669 -0.009456953651450705 0.008858505585037011 0.005318201391233989 -0.0019484977795595382 0.004211290040475014 -0.008754615416211012 -0.005476547743945309 -0.007971853093064536 -0.0035955888031361815 -0.007815690824519382 -0.0024203956137437022] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.006914826420616418 -0.00800103527182981 -0.005191776807077651 0.011779266238839431 0.007052574770819792 0.0022824184599665016 0.0036980384501251544 -0.0018955231719613122 -0.008986491082622882 -0.003013443480558828 -0.01958894621759021 -0.013181000714949258 -0.012945067918515435 0.002938529320532177 -0.0029274702426417224 -0.019053013530347593 0.013034621231766868 0.005146727304446425 -3.9795103146115807E-4 -0.009254037928715157] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.011269693972058585 0.010711709587255149 0.005071655255716321 -0.021068634226163303 -0.020810789978319477 1.674205431919504E-5 -0.018473306799863615 0.004418981678784895 -0.0041512530842336215 0.01849777632905038 0.004551690162251898 -0.01021261749012299 0.023470043012235767 -0.006034797767342786 0.009854772471631294 -0.013877904425857358 -0.005869962429241517 0.0027423874374099886 -0.00481004008714421 -0.008933330323074336] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.0145588309646739 -0.011978573601331853 0.0062602635918132445 -0.007509033196214063 0.010620984043905825 -0.008296800692561227 0.007052530464149027 -0.0011636231089953227 -0.012683749036450037 9.105388067617043E-4 -0.0012792524482930505 0.01426917811716448 0.012460850845171909 0.0016658808247474175 0.0010952224022064683 -0.011468335469293727 -0.0022282202217297404 -0.011417464173964035 -0.0012600210625960796 -0.017624511548981665] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.006169402525848428 0.016443676424945194 0.0015705577474756296 0.014331727091047478 0.015844988925517448 -0.012364550916185857 0.02833983180567858 -0.00548404090074582 -0.013245740338922063 0.0063235880105754145 -0.006601689830661462 -0.004216515143588502 -3.912299821424459E-4 0.002435817243996375 -0.007457879307102346 -0.02057579024957438 -0.015564719812052054 -0.008065488578730483 -0.018459755755573095 0.011072689513647037] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.013123901246221915 0.0023826060401345123 0.0076458227557190915 0.008833281172498812 -0.006547987558013728 -0.010916111512515392 -0.0019762480404274083 -0.00466011625085741 -0.0024881138415867605 0.0035365579797839064 -0.006471575395740709 -0.0034912894401840063 0.0014110822046959424 0.002156698284819442 -0.014967280137171333 0.007924984930647054 -0.014702045889373088 0.0010312090387445082 0.015600362647121347 6.916944610417406E-4] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0010582337684246197 0.005525580175946446 -0.008564668685378429 0.001135566849429176 0.006581183582824168 -0.007881528077357716 -6.353983580505854E-4 -0.010983128481910449 -0.005532667827770162 0.0018442869574754343 9.305963630155501E-4 -5.867143727882475E-4 -0.006664704554091372 -0.009655713137326978 -0.002805981035487872 -0.012267716893221191 0.004964633553968501 -0.001553778231295495 -0.007397493874886643 -0.00826402282064943] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.0020328261912808034 3.566847329790192E-4 -0.0023233899599883583 0.007204226418503259 -0.003593682353056767 0.002139370333111504 -0.004626954172375971 0.007975124634209444 0.004132848534447698 -0.027108131771720476 -0.006415101271646193 0.01436722194936079 0.00591609872210988 -0.0039060910364229436 0.004436927179329265 -0.00737785292078414 -0.017321505957165802 0.002630505400566819 0.009226733264453542 0.001188876068686301] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.006047401310022728 0.0177201069285325 -0.011814962711108086 -0.013677356952459727 -0.004629738997510222 0.012035688906488215 -0.01164729937060059 0.0035975706177436063 0.004320146615127697 -0.002577358601284907 -0.005336501775792918 0.005365471742017789 0.01289278508095587 0.002558356917274287 -0.011702869997274682 0.013890916530486285 0.023431525674784074 -0.006569578625046353 -0.010059058921073371 -0.003345263212265103] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -5.48336891667133E-4 0.005150879833103341 -0.0057043961377306945 -0.0015322788298755819 0.002320815426217155 -0.006872166468912327 -0.009964537791441536 0.0036443725219714703 -0.003826238124239645 -0.009250944851455433 -0.009350829424297193 0.0036854489702333806 -0.009141987373603173 -0.0011024448771863495 0.0057917541546745575 0.013825998751318123 -0.0011396195261500382 0.004343406178422065 -0.003918862651093906 -0.010437978046223999] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.008167944926209144 0.0030593768701381897 0.0049962893578377665 -0.008755535415000376 0.0035714377335743404 -0.010536278034312167 0.007846321883390414 0.015890771801983592 0.0016862775096501753 0.0033582929644707564 -0.01563301024763158 0.011178580374213046 -0.011861551331764508 0.010451542779955946 0.01670921924819137 0.005387468422343057 0.011984510387155357 0.02389513105356982 -0.006413910753830508 0.0010862319065297027] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.009524787520243418 0.003260917022144342 1.848505048914689E-4 -0.0019363450929040732 -0.021582228779191782 0.010493370088817533 -0.0058940908195145745 -0.005313509648893313 -0.005569218370601116 0.003484773231885133 0.0037852598877862525 0.01690364797838548 0.01202354857974762 0.007359359126606127 -0.010103576770127411 0.013147390324621533 -0.009307956876587536 0.011693564471285877 0.0027413988548535633 0.019137718028259938] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -5.590855789364584E-4 -0.014619856940816725 -0.001637031373476557 0.022507568553888104 0.005074410437121519 -0.01451239064145266 -0.008514428695821046 -0.011699383919290372 -0.017145211104210866 0.008476872202307204 0.005875418977125376 -0.012217360994659586 -0.009721271090814507 0.004097011031677557 -0.002617617919909082 0.004641055854264841 0.001250889809260815 0.0018663257360290054 -0.009962968935003596 0.004676538322171194] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.005695879811418911 -0.0024124823827776777 -0.010173829121020344 -0.004381509953068069 -6.36745774844811E-4 -0.013235820269551094 0.0028648093743729656 -0.001154068645837402 0.001661648881190567 -0.00993629624023465 -0.00560086125906106 0.002923062463679399 -0.00376957035550305 0.002804401532317512 -0.008642306773285579 0.003957480621390511 0.00799405267308285 -0.006429748081383937 -0.012930820745642543 -0.02063165622377409] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.008429022997432669 -8.68101517112623E-4 -0.008896288713023351 -0.009224021570165187 0.010760326922394202 -0.011154536443234156 0.021441339682350315 -0.009292316121709028 0.0025418130648657868 0.013075477349983967 0.006965294156139685 -0.006107550108637896 0.00353143711030494 0.00390380027346411 0.002754319246476126 0.01092053755024795 0.002812267537312123 -0.005216891750823014 6.141170238632865E-4 0.009630293090957864] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.002184786170205499 0.0022481429905175107 0.006733844617752186 -0.004928471267544879 0.0019335899898485782 -0.027987034249621626 -0.007600019452155153 -0.003996990418955799 0.0012451138080265998 -0.0068271689529628725 0.001797520312328552 -0.015426947054884284 0.003404764139740233 -0.02414933676930913 7.539827997945269E-4 0.01650032234989097 -0.006451034906575009 0.011232376588874623 0.006043667892519867 0.007570981606338718] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -5.244707709487344E-4 -0.0020389697228152454 -0.015924937649920794 -0.013404795127857836 0.009902931136831522 0.00577213704640343 0.008583587394616926 0.00940258952456309 -4.439858700593399E-4 0.0187332379186849 -0.006360133236375842 0.005663711434679579 -0.02104833998034166 0.0049021368766341365 -0.008134863928547014 0.0030215321734458124 -0.022045490673342244 -1.7048225930924764E-4 0.010216942444213567 0.01532056211799541] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.016470000939494193 -0.01347432197690585 -0.006825649942896551 0.013829838352525893 -0.007333802344911647 -0.0026628545536265136 -0.0034274459927883627 -0.010881173436178533 0.01565542843350261 -0.008364179304625928 0.002824586579422549 -0.004193996400025098 0.008165993111401287 0.012108444403635017 -0.0167979316041774 0.004414246485035242 -0.020834423798672057 0.013553331710303672 0.010467998865110168 0.003316426260573711] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.008778698620179057 -0.007593971107467514 -0.0023139112614270494 -0.005987515491062318 0.01696416739598079 -0.0010881083506640754 -0.004638942534897327 -0.004308683603875018 -0.012494442114993981 -0.002554104297964662 0.0031060147989892496 0.005686651583838129 0.007504917134275272 -0.0019284893337169252 0.009768756323870193 -0.006974874218870555 -0.008055570564054744 -0.008754541726497344 -0.006852550213302085 -0.009038599615337031] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.012691390654570946 -4.966163557695464E-4 0.004173904684280053 0.0018724695504451806 -0.001912960927985041 -0.003107132700994928 -0.001822381174398124 -0.017651697991553465 -0.020700690053288794 0.023941196936238394 0.008552472341985118 -0.005079642442687917 -0.008551279721423572 -0.003049396884624085 0.002499347034903601 0.0016198215170971043 -0.02411790842896991 0.0012114933100011512 0.007789292530318243 -0.003956620847638397] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.0018564316844438332 -0.0034754196522446797 -0.004711252248655228 -8.943079035184868E-5 -0.010384890842215291 -0.012993123194996075 0.014017870368023181 0.008457844824287943 -4.559906891289201E-4 -0.011517521722411949 0.003589757311316549 -0.01368795624674215 -0.007479025800558294 0.005764553792935746 -0.007608725748203804 -0.009414845142240632 0.006450252703135556 -0.013443893655684583 -0.007791025322551954 0.004788108388371476] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.01151960353257431 0.008229540450453755 0.008086780027812409 -0.003599195208476405 0.013644841108302313 -0.004752167552151507 0.027992339244461737 -0.0102961175594396 -0.0011064515840517174 -0.009055074108091815 -0.0027068147911439265 0.009151281816588532 0.011306974808309767 0.008771260786063252 0.006781447785490939 -0.00304249355408534 -0.006616597051946624 5.91952787664526E-4 0.010699205845836484 -0.017376811529076705] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.006088330818078517 -0.00920668485833367 6.096525082954708E-4 -0.010051572928676115 0.00246644954566757 -0.004624585508925619 0.008589566285873056 0.003830059164301769 0.0063586948582137846 -0.003088635806486119 6.151518040898296E-4 -0.009559127385509413 0.0015034067859088565 0.008106346245811658 0.0032176424073256907 0.00888604173037076 -0.01210059819453787 -0.010453004011424023 0.003979797918788587 -0.003751951440126659] [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0014767185278385282 0.005968579173404181 -0.020094851005464612 0.022861522711181966 0.004938409407881838 0.005969797256221748 0.006477494900113891 6.598493822075745E-4 -2.0655852156931825E-4 0.003054780230912406 -0.003431998120755125 -0.007721878991973021 -0.007950869634232843 0.006148308236853141 0.001325288144477072 -0.015246424631812895 -7.863092380283177E-4 -0.013781819344067688 -0.014668196531707324 -0.017192042668216802] [0.00342468193831142 -0.0050389191426211885 -0.006914826420616418 0.011269693972058585 -0.0145588309646739 -0.006169402525848428 0.013123901246221915 0.0010582337684246197 -0.0020328261912808034 -0.006047401310022728 -5.48336891667133E-4 0.008167944926209144 0.009524787520243418 -5.590855789364584E-4 -0.005695879811418911 -0.008429022997432669 -0.002184786170205499 -5.244707709487344E-4 0.016470000939494193 -0.008778698620179057 0.012691390654570946 -0.0018564316844438332 0.01151960353257431 -0.006088330818078517 0.0014767185278385282 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [0.008642779261380032 -0.0036529192208251122 -0.00800103527182981 0.010711709587255149 -0.011978573601331853 0.016443676424945194 0.0023826060401345123 0.005525580175946446 3.566847329790192E-4 0.0177201069285325 0.005150879833103341 0.0030593768701381897 0.003260917022144342 -0.014619856940816725 -0.0024124823827776777 -8.68101517112623E-4 0.0022481429905175107 -0.0020389697228152454 -0.01347432197690585 -0.007593971107467514 -4.966163557695464E-4 -0.0034754196522446797 0.008229540450453755 -0.00920668485833367 0.005968579173404181 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [-0.0045058079725071466 0.010509967458706153 -0.005191776807077651 0.005071655255716321 0.0062602635918132445 0.0015705577474756296 0.0076458227557190915 -0.008564668685378429 -0.0023233899599883583 -0.011814962711108086 -0.0057043961377306945 0.0049962893578377665 1.848505048914689E-4 -0.001637031373476557 -0.010173829121020344 -0.008896288713023351 0.006733844617752186 -0.015924937649920794 -0.006825649942896551 -0.0023139112614270494 0.004173904684280053 -0.004711252248655228 0.008086780027812409 6.096525082954708E-4 -0.020094851005464612 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [0.012930060528096214 -0.0013227420758629086 0.011779266238839431 -0.021068634226163303 -0.007509033196214063 0.014331727091047478 0.008833281172498812 0.001135566849429176 0.007204226418503259 -0.013677356952459727 -0.0015322788298755819 -0.008755535415000376 -0.0019363450929040732 0.022507568553888104 -0.004381509953068069 -0.009224021570165187 -0.004928471267544879 -0.013404795127857836 0.013829838352525893 -0.005987515491062318 0.0018724695504451806 -8.943079035184868E-5 -0.003599195208476405 -0.010051572928676115 0.022861522711181966 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [-3.0581280758134894E-4 0.004840647273825023 0.007052574770819792 -0.020810789978319477 0.010620984043905825 0.015844988925517448 -0.006547987558013728 0.006581183582824168 -0.003593682353056767 -0.004629738997510222 0.002320815426217155 0.0035714377335743404 -0.021582228779191782 0.005074410437121519 -6.36745774844811E-4 0.010760326922394202 0.0019335899898485782 0.009902931136831522 -0.007333802344911647 0.01696416739598079 -0.001912960927985041 -0.010384890842215291 0.013644841108302313 0.00246644954566757 0.004938409407881838 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [0.01650896287728391 0.010385605925631295 0.0022824184599665016 1.674205431919504E-5 -0.008296800692561227 -0.012364550916185857 -0.010916111512515392 -0.007881528077357716 0.002139370333111504 0.012035688906488215 -0.006872166468912327 -0.010536278034312167 0.010493370088817533 -0.01451239064145266 -0.013235820269551094 -0.011154536443234156 -0.027987034249621626 0.00577213704640343 -0.0026628545536265136 -0.0010881083506640754 -0.003107132700994928 -0.012993123194996075 -0.004752167552151507 -0.004624585508925619 0.005969797256221748 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [-0.015448548021856051 0.009183913696056534 0.0036980384501251544 -0.018473306799863615 0.007052530464149027 0.02833983180567858 -0.0019762480404274083 -6.353983580505854E-4 -0.004626954172375971 -0.01164729937060059 -0.009964537791441536 0.007846321883390414 -0.0058940908195145745 -0.008514428695821046 0.0028648093743729656 0.021441339682350315 -0.007600019452155153 0.008583587394616926 -0.0034274459927883627 -0.004638942534897327 -0.001822381174398124 0.014017870368023181 0.027992339244461737 0.008589566285873056 0.006477494900113891 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [-0.01123375801703412 -0.007563682216176544 -0.0018955231719613122 0.004418981678784895 -0.0011636231089953227 -0.00548404090074582 -0.00466011625085741 -0.010983128481910449 0.007975124634209444 0.0035975706177436063 0.0036443725219714703 0.015890771801983592 -0.005313509648893313 -0.011699383919290372 -0.001154068645837402 -0.009292316121709028 -0.003996990418955799 0.00940258952456309 -0.010881173436178533 -0.004308683603875018 -0.017651697991553465 0.008457844824287943 -0.0102961175594396 0.003830059164301769 6.598493822075745E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [0.009549078139750969 0.00404701531874669 -0.008986491082622882 -0.0041512530842336215 -0.012683749036450037 -0.013245740338922063 -0.0024881138415867605 -0.005532667827770162 0.004132848534447698 0.004320146615127697 -0.003826238124239645 0.0016862775096501753 -0.005569218370601116 -0.017145211104210866 0.001661648881190567 0.0025418130648657868 0.0012451138080265998 -4.439858700593399E-4 0.01565542843350261 -0.012494442114993981 -0.020700690053288794 -4.559906891289201E-4 -0.0011064515840517174 0.0063586948582137846 -2.0655852156931825E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [0.010632284153988565 -0.009456953651450705 -0.003013443480558828 0.01849777632905038 9.105388067617043E-4 0.0063235880105754145 0.0035365579797839064 0.0018442869574754343 -0.027108131771720476 -0.002577358601284907 -0.009250944851455433 0.0033582929644707564 0.003484773231885133 0.008476872202307204 -0.00993629624023465 0.013075477349983967 -0.0068271689529628725 0.0187332379186849 -0.008364179304625928 -0.002554104297964662 0.023941196936238394 -0.011517521722411949 -0.009055074108091815 -0.003088635806486119 0.003054780230912406 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [6.244171931503096E-4 0.008858505585037011 -0.01958894621759021 0.004551690162251898 -0.0012792524482930505 -0.006601689830661462 -0.006471575395740709 9.305963630155501E-4 -0.006415101271646193 -0.005336501775792918 -0.009350829424297193 -0.01563301024763158 0.0037852598877862525 0.005875418977125376 -0.00560086125906106 0.006965294156139685 0.001797520312328552 -0.006360133236375842 0.002824586579422549 0.0031060147989892496 0.008552472341985118 0.003589757311316549 -0.0027068147911439265 6.151518040898296E-4 -0.003431998120755125 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [0.010445145836048686 0.005318201391233989 -0.013181000714949258 -0.01021261749012299 0.01426917811716448 -0.004216515143588502 -0.0034912894401840063 -5.867143727882475E-4 0.01436722194936079 0.005365471742017789 0.0036854489702333806 0.011178580374213046 0.01690364797838548 -0.012217360994659586 0.002923062463679399 -0.006107550108637896 -0.015426947054884284 0.005663711434679579 -0.004193996400025098 0.005686651583838129 -0.005079642442687917 -0.01368795624674215 0.009151281816588532 -0.009559127385509413 -0.007721878991973021 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [-0.010461056215432429 -0.0019484977795595382 -0.012945067918515435 0.023470043012235767 0.012460850845171909 -3.912299821424459E-4 0.0014110822046959424 -0.006664704554091372 0.00591609872210988 0.01289278508095587 -0.009141987373603173 -0.011861551331764508 0.01202354857974762 -0.009721271090814507 -0.00376957035550305 0.00353143711030494 0.003404764139740233 -0.02104833998034166 0.008165993111401287 0.007504917134275272 -0.008551279721423572 -0.007479025800558294 0.011306974808309767 0.0015034067859088565 -0.007950869634232843 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [-0.005929669884434157 0.004211290040475014 0.002938529320532177 -0.006034797767342786 0.0016658808247474175 0.002435817243996375 0.002156698284819442 -0.009655713137326978 -0.0039060910364229436 0.002558356917274287 -0.0011024448771863495 0.010451542779955946 0.007359359126606127 0.004097011031677557 0.002804401532317512 0.00390380027346411 -0.02414933676930913 0.0049021368766341365 0.012108444403635017 -0.0019284893337169252 -0.003049396884624085 0.005764553792935746 0.008771260786063252 0.008106346245811658 0.006148308236853141 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [-0.018059567721070632 -0.008754615416211012 -0.0029274702426417224 0.009854772471631294 0.0010952224022064683 -0.007457879307102346 -0.014967280137171333 -0.002805981035487872 0.004436927179329265 -0.011702869997274682 0.0057917541546745575 0.01670921924819137 -0.010103576770127411 -0.002617617919909082 -0.008642306773285579 0.002754319246476126 7.539827997945269E-4 -0.008134863928547014 -0.0167979316041774 0.009768756323870193 0.002499347034903601 -0.007608725748203804 0.006781447785490939 0.0032176424073256907 0.001325288144477072 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [0.0031764815313101756 -0.005476547743945309 -0.019053013530347593 -0.013877904425857358 -0.011468335469293727 -0.02057579024957438 0.007924984930647054 -0.012267716893221191 -0.00737785292078414 0.013890916530486285 0.013825998751318123 0.005387468422343057 0.013147390324621533 0.004641055854264841 0.003957480621390511 0.01092053755024795 0.01650032234989097 0.0030215321734458124 0.004414246485035242 -0.006974874218870555 0.0016198215170971043 -0.009414845142240632 -0.00304249355408534 0.00888604173037076 -0.015246424631812895 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [0.005860784174742606 -0.007971853093064536 0.013034621231766868 -0.005869962429241517 -0.0022282202217297404 -0.015564719812052054 -0.014702045889373088 0.004964633553968501 -0.017321505957165802 0.023431525674784074 -0.0011396195261500382 0.011984510387155357 -0.009307956876587536 0.001250889809260815 0.00799405267308285 0.002812267537312123 -0.006451034906575009 -0.022045490673342244 -0.020834423798672057 -0.008055570564054744 -0.02411790842896991 0.006450252703135556 -0.006616597051946624 -0.01210059819453787 -7.863092380283177E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [-0.008294739985706992 -0.0035955888031361815 0.005146727304446425 0.0027423874374099886 -0.011417464173964035 -0.008065488578730483 0.0010312090387445082 -0.001553778231295495 0.002630505400566819 -0.006569578625046353 0.004343406178422065 0.02389513105356982 0.011693564471285877 0.0018663257360290054 -0.006429748081383937 -0.005216891750823014 0.011232376588874623 -1.7048225930924764E-4 0.013553331710303672 -0.008754541726497344 0.0012114933100011512 -0.013443893655684583 5.91952787664526E-4 -0.010453004011424023 -0.013781819344067688 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [-0.0011962635090468014 -0.007815690824519382 -3.9795103146115807E-4 -0.00481004008714421 -0.0012600210625960796 -0.018459755755573095 0.015600362647121347 -0.007397493874886643 0.009226733264453542 -0.010059058921073371 -0.003918862651093906 -0.006413910753830508 0.0027413988548535633 -0.009962968935003596 -0.012930820745642543 6.141170238632865E-4 0.006043667892519867 0.010216942444213567 0.010467998865110168 -0.006852550213302085 0.007789292530318243 -0.007791025322551954 0.010699205845836484 0.003979797918788587 -0.014668196531707324 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0] [7.786838119541754E-4 -0.0024203956137437022 -0.009254037928715157 -0.008933330323074336 -0.017624511548981665 0.011072689513647037 6.916944610417406E-4 -0.00826402282064943 0.001188876068686301 -0.003345263212265103 -0.010437978046223999 0.0010862319065297027 0.019137718028259938 0.004676538322171194 -0.02063165622377409 0.009630293090957864 0.007570981606338718 0.01532056211799541 0.003316426260573711 -0.009038599615337031 -0.003956620847638397 0.004788108388371476 -0.017376811529076705 -0.003751951440126659 -0.017192042668216802 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]]
                        :biases (repeat 45 0)
                        :exp-name "digits"
                        :calibration-id #uuid "2033334b-05b8-540f-9b9e-dc936801a6f8"
                        :data-id
                        #_#uuid "0bd17cd8-237b-5ecd-987a-033ca22ea6f1" ;; 2x2 bars
                        #_#uuid "0b619370-6716-5ae8-89b6-9c38b4e11e94" ;; 3x3 bars
                        #uuid "18127501-df3c-578d-8863-a3e17f2a61a7" ;; 5x5 digits 3,4,5
                        #_#uuid "0527b8c6-db13-5275-862e-22a6e940c7e9" ;; strong XOR
                        #_#uuid "0185f4e0-a88f-5843-b7bb-bc9a5c928218" ;; soft XOR
                        #_#uuid "30b23c43-7b14-5250-8f87-52f1eed0c7a4" ;; 3x3 bars symmetric
                        })))

  (<?? (-get-in store [#uuid "18127501-df3c-578d-8863-a3e17f2a61a7" ]))

  (require '[clojure.java.shell :refer [sh]])
  (sh "gnome-terminal"  "ipython"
      :dir (:base-directory test-env)
      :env (assoc (into {} (System/getenv))
                  "DISPLAY" "localhost:37.0"))


  (def curr-exps
    (doall
     (for [phase-duration [1000]
           seed (range 50 60)]
       (future
         (let [source-path (str (get-in @state [:config :source-base-path])
                                "model-nmsampling/code/ev_cd/train.py")
               h-count 20
               v-count 9]
           (let [params {:training-params {:h_count h-count,
                                           :epochs (int (/ 2e6 phase-duration)) ;; TODO
                                           :dt 0.1,
                                           :burn_in_time 0.,
                                           :phase_duration (float phase-duration)
                                           :learning_rate (float (/ 1e-4 phase-duration)) ;; ~ lr 0.01
                                           :weight_recording_interval 100.0,
                                           :stdp_burnin 20.0,
                                           :sim_setup_kwargs {:grng_seed seed
                                                              :rng_seeds_seed seed}}
                         #_(vec (take 20 #(repeatedly (vec (sample-normal 9 :mean 0 :sd 0.01)))))
                         :weights (full-matrix [[-7.664036749380962E-4 -2.562386754141901E-4 0.013822004245474178 -0.0022818383448701862 -7.811137329310021E-4 -0.011715832217955502 -7.745592147699734E-4 0.0159238467655298 -0.0019558637264695763] [-0.004923278931593456 -0.006902785941740222 0.0022506240271483596 0.005123704622273227 0.007844374897920918 -0.005083509117575359 -0.003524235608095418 6.520950585379455E-4 0.01854859832605527] [-0.0063255037951736315 0.006540827706271029 -6.540271747245754E-4 -0.004455272924723231 0.0034296266812934625 -0.004800641409812772 0.0021214480624468404 0.004035201242696172 -0.008389038961947242] [0.006618948965641044 -0.0010880475857611878 0.0032369370874010387 0.005723718605549148 -0.014681420237670618 0.008102145304072269 0.011776046590860987 4.646395082070941E-4 -0.014905396819613224] [-0.008109913482898147 -0.005687314004782421 0.002427338809176914 -3.97412154268436E-5 -0.010361947767676991 -0.017523353315214835 -0.011586908037746216 0.007072112268216339 -0.008651219090300503] [-0.0026907436393912377 0.007184312107520426 -0.006831314044273269 0.0198069301478893 0.007602529623651352 0.010263681981734912 0.007236576934243795 1.8556291696205965E-4 0.015037729240728073] [0.011355684813942975 -0.0038773935735100487 -0.00862015250267014 0.0090002077611994 0.001131471198587196 -0.011624992229704052 -0.015565728348029188 0.0038436689684173764 1.6586170039840708E-4] [0.007319453641886518 0.010972962335211117 -0.017234723533899175 -0.0025973816745891633 0.0026147485096136495 -8.03580195584755E-4 9.506790683245019E-4 -0.005852222663889197 -0.024776615610478985] [-0.004596604723055763 0.009381429897770582 -0.008938680663721405 0.006323298390942373 0.0027396777789669684 0.007505464451761501 0.007361912089290902 0.00863029445023163 -0.00564585571628202] [0.016117559870164874 0.009272457763763554 -0.006521570903359428 0.0026487481240348152 -0.008600961885012881 0.0196591123365055 -0.019625148686841298 0.013640951120723232 -0.006888059930886866] [0.0010194423887498487 0.0056481058410672745 -0.009749010586571077 -0.009150982840213748 0.0016940146251809038 -0.011779967212505888 -0.006280124334383436 0.004056898195430901 0.007492359813519893] [5.401383752402477E-4 0.017517167793427265 -2.748261972265998E-4 0.011919173075989657 0.003943825348446874 0.018306153455558163 -0.003593340430168061 0.03097430057491113 -0.012588128450700101] [-0.0015735585460383964 -0.012318393620452154 0.006083327087058154 0.020411661147666193 -0.01342425861772773 0.006080779515740005 -0.0026572476974946295 -0.006943294646392541 0.0031352670966969106] [-0.002365209996495664 0.018980259471602142 0.007099637872926429 0.005164470836572873 0.00978681115786032 0.017824938425784007 0.009192928954774702 0.01258134043096833 -1.6668825099392428E-4] [-0.010049329614324897 -0.013976437811905 0.013928833978803689 0.010300555990359027 0.009966551338015715 -0.013057339809639737 0.009663313276927222 0.016339319448533764 1.5138979620489234E-4] [-0.002707323164608901 0.0017398777584710667 -0.001435782868064688 -0.007179710186370515 0.004257284970540099 -0.010186409663534639 0.008124780401927765 -0.003041170370695345 0.0031202677754470606] [0.017313502459600248 0.004891617454207757 0.02003451591120121 0.018579132252156693 -0.003306167641076789 -0.020336690733887313 0.012813930878150618 0.01728175267218138 -0.002307716293241962] [0.011976898799858453 -0.014562192560805806 -9.814267664808513E-4 -0.002756473823195137 0.003146514093045516 -0.006518237660103966 -0.010404869814239711 -0.009948998498916336 0.00586174911861045] [-0.00471155350784076 0.00689682615390127 -0.0019031021505873194 0.014822565900591908 -0.013610758430274726 0.0018016472325935182 0.006757924057358311 0.0031065100926015027 0.005102134405331422] [-0.010686515370945173 -0.006301877814784609 0.011595184906934425 -0.0030182756608344487 0.014635781296334758 -0.009135486088587351 0.003263737418515076 0.007399731025787994 -0.017682232010800086]])
                         :biases (vec (repeat (+ h-count v-count) 0))

                         :calibration-id #uuid "22f685d0-ea7f-53b5-97d7-c6d6cadc67d3"
                         :data-id
                         #_#uuid "0bd17cd8-237b-5ecd-987a-033ca22ea6f1" ;; 2x2 bars
                         #_#uuid "0b619370-6716-5ae8-89b6-9c38b4e11e94" ;; 3x3 bars
                         #_#uuid "18127501-df3c-578d-8863-a3e17f2a61a7" ;; 5x5 digits 3,4,5
                         #_#uuid "0527b8c6-db13-5275-862e-22a6e940c7e9" ;; strong XOR
                         #uuid "30b23c43-7b14-5250-8f87-52f1eed0c7a4" ;; 3x3 bars symmetric
                         :source-path source-path
                         :args ["srun-log" "python" source-path]}]
             (try
               (run-experiment! (partial setup-training! store) params)
               (catch Exception e
                 (debug "experiment failed: " e)
                 e))))))))

  #_[1e-5 5e-5 1e-6 5e-6 1e-6 5e-7 1e-7 1e-8 5e-8]


  (println (clojure.java.shell/sh "ps"))

  (def rbm #boltzmann.theoretical.TheoreticalRBM{:restricted-weights [[-0.8841340318279167 2.251071635836021 3.5673896795687194 -3.420249147683104 -1.2819443536331754 0.9862760699510305 -3.4208225115014526 -1.2835930112086564 0.9873557565397155] [5.228078612942525 3.153110701050849 -1.6835081697846173 2.18766698353923 -1.575343145114616 -4.827752402673504 2.1873629031641753 -1.5766255413938415 -4.828597199783511] [-1.1414929820445003 2.0231880113442706 3.829782067690602 -3.5034730413120085 -1.2842516806749793 1.422658547637368 -3.502344192821967 -1.28558125705108 1.422741375870716] [-1.0225817906128736 2.081521313666241 3.6883277133438406 -3.4370661291171474 -1.2858671906995713 1.2297101281301448 -3.4375017775416783 -1.2845039114086085 1.2298397140916468] [4.467966121624177 3.087131915623917 -1.2084866875874103 1.4317318887144581 -1.5665440680582514 -4.347260768337335 1.4332610804749855 -1.566357645033309 -4.346089328590838]] :v-biases [-1.5341301556155136 -9.510913440211544 -2.0159380056943514 1.2062999975130388 -2.7633099136703025 0.8206392901391488 1.2050512968752354 -2.7620516045991153 0.8192053284323875] :h-biases [0.7027248426055048 1.2372358615489172 0.8801590566333531 0.8040422074136998 0.9519249106300683]})

  (def curr-exp
    (future
      (let [source-path (str (get-in @state [:config :source-base-path])
                             "model-nmsampling/code/ev_cd/train.py")
            seed 42
            phase-duration 2000]
        (let [params {:training-params {:h_count 20,
                                        :epochs (int (/ (* 10000 100)
                                                        phase-duration)) ;; TODO
                                        :dt 0.1,
                                        :burn_in_time 0.,
                                        :phase_duration (float phase-duration)
                                        :learning_rate 1e-8,
                                        :weight_recording_interval 100.0,
                                        ;:bias_learning_rate 0.0,
                                        :stdp_burnin 5.0,
                                        :sim_setup_kwargs {:grng_seed seed
                                                           :rng_seeds_seed seed}}
                      :calibration-id #uuid "22f685d0-ea7f-53b5-97d7-c6d6cadc67d3"
                      :init-rweights (:restricted-weights rbm)
                      #_(->> (repeat 9 0.00001)
                             (repeat 5)
                             (mapv vec))
                      :init-biases (vec (concat (:v-biases rbm) (:h-biases rbm)))

                      :data-id
                      #_#uuid "0bd17cd8-237b-5ecd-987a-033ca22ea6f1" ;; 2x2 bars
                      #uuid "0b619370-6716-5ae8-89b6-9c38b4e11e94" ;; 3x3 bars
                      #_#uuid "18127501-df3c-578d-8863-a3e17f2a61a7" ;; 5x5 digits 3,4,5
                      #_#uuid "0527b8c6-db13-5275-862e-22a6e940c7e9" ;; strong XOR
                      :source-path source-path
                      :args ["srun-log" "python" source-path]}]
          (try
            (run-experiment! (partial setup-training! store) params)
            (catch Exception e
              (debug "experiment failed: " e)
              e))))))




  (println (-> curr-exp ex-data :process :err))
  (println (-> curr-exp :process :out))
  (-> curr-exp :output :dist_joint_sim.h5)


  (clojure.pprint/pprint (dissoc curr-exp :new-blobs :new-values :process))

  (<?? (-get-in store [(uuid (dissoc curr-exp :new-blobs :new-values :process))]))


  (<?? (-get-in store [#uuid "181516fb-226e-5f0b-81b8-09eadddc4f9a"]))

  (clojure.pprint/pprint #_(->> test-exp :process :err (take-last 1000) (apply str))
                         (dissoc curr-exp :process :new-blobs))

  (<?? (-get-in store [(uuid {:h_count 12
                              :epochs 1,
                              :dt 0.01,
                              :burn_in_time 0.,
                              :phase_duration 100.0,
                              :learning_rate 1e-6,
                              :weight_recording_interval 100.0,
                              :stdp_burnin 10.0,
                              :sampling_time 1e6})]))



  (def base-dirs (map #(str "experiments/" % "/")
                      (let [f (io/file "experiments/")]
                        (filter #(.contains % "digits_ad4") (.list f)))))



  (clojure.pprint/pprint (mapv #(-> (gather-results! % [
                                                        "spike_trains.h5"
                                                        "bias_theo_history.h5"
                                                        "weight_theo_history.h5"
                                                        ])
                                    (dissoc :new-blobs))
                               base-dirs))


  (mapv #(-> (gather-results! % [
                                 "bias_theo_history.h5"
                                 "weight_theo_history.h5"
                                 ])
             (dissoc :new-blobs))
        base-dirs)




  ;; TODO protect from committing dangling value uuids
  (doseq [base-dir base-dirs #_(map (comp :base-directory deref) curr-exps)]
    (when base-dir
      (let [res (gather-results! base-dir ["bias_theo_history.h5"
                                           "weight_theo_history.h5"
                                           "spike_trains.h5"
                                           #_"dist_joint_sim.h5"
                                           #_"train.log"
                                           "srun.log"
                                           ])
            res (assoc res :topic "5x5 3 digits 3,4,5")
            tparams (-> res :exp-params :training-params)]
        (doseq [b (:new-blobs res)]
          (<?? (s/transact-binary stage ["weilbach@dopamine.kip" repo-id "train current rbms"] b)))

        (when-not (<?? (-exists? store (uuid tparams)))
          (<?? (s/transact stage ["weilbach@dopamine.kip" repo-id "train current rbms"]
                           (find-fn 'add-training-params)
                           tparams)))

        (<?? (s/transact stage ["weilbach@dopamine.kip" repo-id "train current rbms"]
                         (find-fn 'train-ev-cd->datoms)
                         (dissoc res :new-blobs)))
        (println "transacted exp: " (uuid (dissoc res :new-blobs))))
      (<?? (s/commit! stage {"weilbach@dopamine.kip" {repo-id #{"train current rbms"}}}))))


  (clojure.pprint/pprint (get-in @stage ["weilbach@dopamine.kip" repo-id :state :branches]))
  (uuid (dissoc curr-exp :process :new-blobs :new-values))


  (swap! stage update-in ["weilbach@dopamine.kip" repo-id :transactions] assoc "train current rbms" [])
  (keys (get-in @stage ["weilbach@dopamine.kip" repo-id :state]))

  (<?? (-update-in store ["weilbach@dopamine.kip" repo-id] #(dissoc % :state)))
  (<?? (-assoc-in store ["weilbach@dopamine.kip" repo-id :branches "train current rbms2"] #{#uuid "3cf62813-8e88-5feb-b968-eae428a7f93e"} ))


  (<?? (s/transact-binary stage ["weilbach@dopamine.kip" repo-id "train current rbms"] digits))



  (<?? (s/commit! stage {"weilbach@dopamine.kip" {repo-id #{"train current rbms"}}}))

  (clojure.pprint/pprint (-> curr-exp (dissoc :process)))

  (def hist
    (<?? (real/commit-history-values store
                                     (get-in @stage ["weilbach@dopamine.kip" repo-id :state :causal-order])
                                     (first (get-in @stage ["weilbach@dopamine.kip" repo-id :state :branches "train current rbms"])))))

  (clojure.pprint/pprint hist)

  (def digit-data [[0 1 1 1 0
                    0 0 0 0 1
                    0 0 1 1 0
                    0 0 0 0 1
                    0 1 1 1 0]
                   [1 0 0 0 0
                    1 0 1 0 0
                    1 1 1 1 0
                    0 0 1 0 0
                    0 0 1 0 0]
                   [1 1 1 1 0
                    1 0 0 0 0
                    1 1 1 0 0
                    0 0 0 1 0
                    1 1 1 0 0]])

  (spit "/tmp/digits" digit-data)
  (def digits (slurp-bytes "/tmp/digits"))

  (uuid digits)


  (spit "/tmp/bars" (str [[1 0 0
                           1 0 0
                           1 0 0]
                          [0 0 1
                           0 0 1
                           0 0 1]
                          [1 1 1
                           0 0 0
                           0 0 0]
                          [0 0 0
                           0 0 0
                           1 1 1]]))
  (def bars (slurp-bytes "/tmp/bars"))

  (def xor (slurp-bytes "/tmp/xor"))
  (spit "/tmp/xor" (str [[0 0]
                         [1 0]
                         [1 0]
                         [1 0]
                         [1 0]
                         [1 0]
                         [0 1]
                         [0 1]
                         [0 1]
                         [0 1]
                         [0 1]
                         [1 1]])))
